name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Make sure devDependencies are installed (vite, typescript, etc.)
      NODE_ENV: development
    steps:
      - uses: actions/checkout@v4

      - name: Show repo files
        run: |
          echo "Top-level files:"; ls -la
          echo "package.json:"; cat package.json || true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Enable Corepack (for pnpm/yarn if present)
        run: corepack enable

      - name: Detect package manager
        id: pm
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi
          echo "Detected PM: $(cat $GITHUB_OUTPUT)"

      - name: Install dependencies (npm)
        if: steps.pm.outputs.manager == 'npm'
        run: |
          set -o pipefail
          if [ -f package-lock.json ]; then
            npm ci 2>&1 | tee install.log
          else
            npm install 2>&1 | tee install.log
          fi

      - name: Install dependencies (pnpm)
        if: steps.pm.outputs.manager == 'pnpm'
        run: |
          corepack prepare pnpm@latest --activate
          pnpm i --frozen-lockfile 2>&1 | tee install.log

      - name: Install dependencies (yarn)
        if: steps.pm.outputs.manager == 'yarn'
        run: |
          corepack prepare yarn@stable --activate
          yarn install --frozen-lockfile 2>&1 | tee install.log

      - name: Print versions
        run: |
          node -v | tee node-version.txt
          npm -v  | tee npm-version.txt || true
          npx vite --version || true

      - name: Build (npm)
        if: steps.pm.outputs.manager == 'npm'
        run: |
          set -o pipefail
          if npm run | grep -q " build"; then
            npm run build 2>&1 | tee build.log
          else
            npx --yes vite build 2>&1 | tee build.log
          fi

      - name: Build (pnpm)
        if: steps.pm.outputs.manager == 'pnpm'
        run: |
          set -o pipefail
          if pnpm -w run | grep -q " build"; then
            pnpm run build 2>&1 | tee build.log
          else
            npx --yes vite build 2>&1 | tee build.log
          fi

      - name: Build (yarn)
        if: steps.pm.outputs.manager == 'yarn'
        run: |
          set -o pipefail
          if yarn run | grep -q " build"; then
            yarn build 2>&1 | tee build.log
          else
            npx --yes vite build 2>&1 | tee build.log
          fi

      - name: Show logs (tail)
        if: always()
        run: |
          echo "===== install.log (tail) ====="; tail -n 200 install.log || true
          echo "===== build.log (tail)   ====="; tail -n 200 build.log   || true

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          if-no-files-found: ignore
          path: |
            install.log
            build.log
            node-version.txt
            npm-version.txt

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Copy SPA 404
        run: |
          if [ -f dist/index.html ]; then cp dist/index.html dist/404.html; fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
